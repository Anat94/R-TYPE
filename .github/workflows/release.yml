name: Create Release

on: [push]
  # pull_request:
# 
    # types: [closed]

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [linux, windows]
    steps:

      - name: Move Linux executables
        run: |
          mkdir -p linux
          cp client ./linux/
          cp server ./linux/
      
      - name: Move Windows executables
        run: |
          mkdir -p windows
          cp Debug/client ./windows/
          cp Debug/server ./windows/
      
      - name: Archive the assets folder
        run: |
          zip -r assets.zip assets windows linux

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this Release
            - Updated client / server executables
            - Updated assets
          draft: false
          prerelease: false
          asset_overwrite: false
          exclude_sources: true


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets.zip
          asset_name: assets-v${{ github.run_number }}.zip
          asset_content_type: application/zip


      - name: Delete Source Code Archives
        run: |
          ASSET_ID=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases/${{ github.run_number }}/assets | jq -r '.[] | select(.name == "Source code (zip)" or .name == "Source code (tar.gz)") | .id')

          if [ -n "$ASSET_ID" ]; then
            for id in $ASSET_ID; do
              curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/assets/$id"
            done
          fi

